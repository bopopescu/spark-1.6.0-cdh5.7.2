From 1da2fbde7f71ee8f6e6e4da1049408370f1a472d Mon Sep 17 00:00:00 2001
From: Marcelo Vanzin <vanzin@cloudera.com>
Date: Thu, 18 Feb 2016 15:46:08 -0800
Subject: [PATCH 133/201] CLOUDERA-BUILD. CDH-37391. Fix CTE query parsing.

The AST for CTE queries changed because of an internal Hive change
(HIVE-10698 I believe), so the Spark parser needs to reflect that.

(cherry picked from commit 06ce9dae07f9dbd965c81b7de128eafcf7407e89)
---
 .../scala/org/apache/spark/sql/hive/HiveQl.scala   |   32 +++++++++-----------
 1 file changed, 14 insertions(+), 18 deletions(-)

diff --git a/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveQl.scala b/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveQl.scala
index d14b98d..daea484 100644
--- a/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveQl.scala
+++ b/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveQl.scala
@@ -899,25 +899,21 @@ https://cwiki.apache.org/confluence/display/Hive/Enhanced+Aggregation%2C+Cube%2C
     case Token("TOK_TRUNCATETABLE",
           Token("TOK_TABLE_PARTITION", table) :: Nil) => NativePlaceholder
 
-    case Token("TOK_QUERY", queryArgs)
-        if Seq("TOK_FROM", "TOK_INSERT").contains(queryArgs.head.getText) =>
-
-      val (fromClause: Option[ASTNode], insertClauses, cteRelations) =
-        queryArgs match {
-          case Token("TOK_FROM", args: Seq[ASTNode]) :: insertClauses =>
-            // check if has CTE
-            insertClauses.last match {
-              case Token("TOK_CTE", cteClauses) =>
-                val cteRelations = cteClauses.map(node => {
-                  val relation = nodeToRelation(node, context).asInstanceOf[Subquery]
-                  (relation.alias, relation)
-                }).toMap
-                (Some(args.head), insertClauses.init, Some(cteRelations))
-
-              case _ => (Some(args.head), insertClauses, None)
-            }
+    case Token("TOK_QUERY", queryArgs) =>
+      val fromClause = queryArgs.find(_.getText == "TOK_FROM").map { node =>
+        val Token(_, args) = node
+        args.head
+      }
+
+      val insertClauses = queryArgs.find(_.getText == "TOK_INSERT")
 
-          case Token("TOK_INSERT", _) :: Nil => (None, queryArgs, None)
+      val cteRelations = queryArgs.find(_.getText == "TOK_CTE")
+        .map { node =>
+          val Token(_, cteClauses) = node
+          cteClauses.map { clause =>
+            val relation = nodeToRelation(clause, context).asInstanceOf[Subquery]
+            (relation.alias, relation)
+          }.toMap
         }
 
       // Return one query for each insert clause.
-- 
1.7.9.5

